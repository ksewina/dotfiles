# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

#support colors
#set -g default-terminal "$TERM"
#set -ag default-terminal "$TERM:Tc"
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"

# setting the delay between prefix and command
set -s escape-time 5

# splitting panes with | and -
# and open splits in the same directory

unbind %
unbind '"'

bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

#mouse support
set -g mouse on

# default window with an activity alert# start with window 1 (instead of 0)
set -g base-index 1
# start with pane 1
set -g pane-base-index 1
# Automatically rename windows based on the application within
setw -g automatic-rename on
# Renumber windows if others are closed
set -g renumber-windows on

# removing the -r option would only allow tapping once
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5

#reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

# Use titles in tabs
set -g set-titles on

# Restoring clear screen binding, <prefix> C-l can clear screen now
bind C-l send-keys 'C-l'

# Tmux doesn't pass <S-CR> codes to Neovim
# https://stackoverflow.com/questions/16359878/how-to-map-shift-enter
bind -n S-Enter send-keys Escape "[13;2u"

# Smart pane switching with awareness of Vim splits.
# From https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n 'C-j' if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n 'C-k' if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n 'C-l' if-shell "$is_vim" "send-keys C-l" "select-pane -R"

#reminder to me: have the nvim plugin loaded as well

# open new windows in the current path
bind c new-window -c "#{pane_current_path}"

# tpm plugin
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# list of tmux plugins
set -g @plugin 'christoomey/vim-tmux-navigator' #need to have this in nvim as well
set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux sessions after computer restart
set -g @plugin 'tmux-plugins/tmux-continuum' # automatically saves sessions for you every 15 minutes
set -g @plugin 'sainnhe/tmux-fzf' # fuzy finding


set -g @resurrect-capture-pane-contents 'on'
# To be absolutely sure automatic restore doesn't happen, create a tmux_no_auto_restore file in your home directory 
# command: $ touch ~/tmux_no_auto_restore). 
# Automatic restore won't happen if this file exists.
set -g @continuum-restore 'on'
set -g @continuum-save-interval '30' # autosave 30 minutes

# tmux fzf
TMUX_FZF_LAUNCH_KEY="C-f"

set -g status-style bg=default,fg=#a8a8a8

set -g status-left " #S #[fg=#666666] | "
set -g status-left-length 30

set -g window-status-format "#[fg=#666666] #I:#W "
set -g window-status-current-format "#[fg=#ffffff] #I:#W "
set -g window-status-separator ""

set -g status-right '%H:%M | %d-%b '

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
